pipeline {
    agent any
    stages {
        stage('Install Docker') {
            steps {
                sh '''
                # Install Docker
                if ! command -v docker &> /dev/null
                then
                    echo "Docker not found, installing..."
                    sudo apt-get update
                    sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                    sudo apt-get update
                    sudo apt-get install -y docker-ce
                    sudo usermod -aG docker $USER
                else
                    echo "Docker is already installed"
                fi

                # Start Docker service if it's not running
                sudo systemctl start docker
                sudo systemctl enable docker
                '''
            }
        }
        stage('Test Docker') {
            steps {
                sh 'docker --version'
                sh 'docker ps'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ardaakkiz/sample-java-app:latest --platform linux/amd64 .'
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USERNAME')]) {
                    sh 'echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin'
                    sh 'docker push ardaakkiz/sample-java-app:latest'
                }
            }
        }
    }
}