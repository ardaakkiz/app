pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials-id')
    }
    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                    # Update and install dependencies
                    apt-get update -y
                    apt-get install -y apt-utils apt-transport-https ca-certificates curl
                    apt-get --fix-broken install -y
                    '''
                }
            }
        }
        stage('Install Docker') {
            steps {
                script {
                    sh '''
                    # Install Docker
                    if ! command -v docker &> /dev/null; then
                        curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
                        echo "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
                        apt-get update -y
                        apt-get install -y docker-ce docker-ce-cli containerd.io
                    fi
                    '''
                }
            }
        }
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ardaakkiz/app.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("ardaakkiz/sample-java-app:${env.BUILD_ID}", "--platform linux/amd64 .")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials-id') {
                        docker.image("ardaakkiz/sample-java-app:${env.BUILD_ID}").push()
                        docker.image("ardaakkiz/sample-java-app:${env.BUILD_ID}").push('latest')
                    }
                }
            }
        }
    }
}
