pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-value
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    args: ['$(JENKINS_SECRET)', '$(JENKINS_NAME)']
    tty: true
  - name: docker
    image: docker:19.03.12
    command:
    - cat
    tty: true
"""
        }
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials-id')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ardaakkiz/app.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                container('docker') {
                    script {
                        docker.build("ardaakkiz/sample-java-app:${env.BUILD_ID}", "--platform linux/amd64 .")
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                container('docker') {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'DOCKERHUB_CREDENTIALS') {
                            docker.image("ardaakkiz/sample-java-app:${env.BUILD_ID}").push()
                            docker.image("ardaakkiz/sample-java-app:${env.BUILD_ID}").push('latest')
                        }
                    }
                }
            }
        }
    }
}